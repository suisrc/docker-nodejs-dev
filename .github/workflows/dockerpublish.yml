name: Docker

on:
  release:
    types: [published]

env:
  DOCKER_IMAGE_NAME: suisrc/vscode
  DOCKER_IMAGE_VERSION_SUFFIX: -dev-nodejs

jobs:
  push-debian:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --file debian.Dockerfile --tag image

      - name: Push docker image
        run: |
          REGISTRY_URL=docker.io
          IMAGE_OS=debian9
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-$IMAGE_OS$DOCKER_IMAGE_VERSION_SUFFIX
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
#  push-npmjs:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          docker build ./npmjs --file ./npmjs/debian.Dockerfile --tag image
#
#      - name: Push docker image
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/suisrc/npmjs
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
